"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/siwe";
exports.ids = ["vendor-chunks/siwe"];
exports.modules = {

/***/ "(ssr)/./node_modules/siwe/dist/client.js":
/*!******************************************!*\
  !*** ./node_modules/siwe/dist/client.js ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweMessage = void 0;\n// TODO: Figure out how to get types from this lib:\nconst siwe_parser_1 = __webpack_require__(/*! @spruceid/siwe-parser */ \"(ssr)/./node_modules/@spruceid/siwe-parser/dist/parsers.js\");\nconst uri = __importStar(__webpack_require__(/*! valid-url */ \"(ssr)/./node_modules/valid-url/index.js\"));\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/./node_modules/siwe/dist/ethersCompat.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/siwe/dist/types.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/siwe/dist/utils.js\");\nclass SiweMessage {\n    /**\n     * Creates a parsed Sign-In with Ethereum Message (EIP-4361) object from a\n     * string or an object. If a string is used an ABNF parser is called to\n     * validate the parameter, otherwise the fields are attributed.\n     * @param param {string | SiweMessage} Sign message as a string or an object.\n     */\n    constructor(param) {\n        if (typeof param === 'string') {\n            const parsedMessage = new siwe_parser_1.ParsedMessage(param);\n            this.scheme = parsedMessage.scheme;\n            this.domain = parsedMessage.domain;\n            this.address = parsedMessage.address;\n            this.statement = parsedMessage.statement;\n            this.uri = parsedMessage.uri;\n            this.version = parsedMessage.version;\n            this.nonce = parsedMessage.nonce;\n            this.issuedAt = parsedMessage.issuedAt;\n            this.expirationTime = parsedMessage.expirationTime;\n            this.notBefore = parsedMessage.notBefore;\n            this.requestId = parsedMessage.requestId;\n            this.chainId = parsedMessage.chainId;\n            this.resources = parsedMessage.resources;\n        }\n        else {\n            this.scheme = param === null || param === void 0 ? void 0 : param.scheme;\n            this.domain = param.domain;\n            this.address = param.address;\n            this.statement = param === null || param === void 0 ? void 0 : param.statement;\n            this.uri = param.uri;\n            this.version = param.version;\n            this.chainId = param.chainId;\n            this.nonce = param.nonce;\n            this.issuedAt = param === null || param === void 0 ? void 0 : param.issuedAt;\n            this.expirationTime = param === null || param === void 0 ? void 0 : param.expirationTime;\n            this.notBefore = param === null || param === void 0 ? void 0 : param.notBefore;\n            this.requestId = param === null || param === void 0 ? void 0 : param.requestId;\n            this.resources = param === null || param === void 0 ? void 0 : param.resources;\n            if (typeof this.chainId === 'string') {\n                this.chainId = (0, siwe_parser_1.parseIntegerNumber)(this.chainId);\n            }\n        }\n        this.nonce = this.nonce || (0, utils_1.generateNonce)();\n        this.validateMessage();\n    }\n    /**\n     * This function can be used to retrieve an EIP-4361 formated message for\n     * signature, although you can call it directly it's advised to use\n     * [prepareMessage()] instead which will resolve to the correct method based\n     * on the [type] attribute of this object, in case of other formats being\n     * implemented.\n     * @returns {string} EIP-4361 formated message, ready for EIP-191 signing.\n     */\n    toMessage() {\n        /** Validates all fields of the object */\n        this.validateMessage();\n        const headerPrefx = this.scheme ? `${this.scheme}://${this.domain}` : this.domain;\n        const header = `${headerPrefx} wants you to sign in with your Ethereum account:`;\n        const uriField = `URI: ${this.uri}`;\n        let prefix = [header, this.address].join('\\n');\n        const versionField = `Version: ${this.version}`;\n        if (!this.nonce) {\n            this.nonce = (0, utils_1.generateNonce)();\n        }\n        const chainField = `Chain ID: ` + this.chainId || 0;\n        const nonceField = `Nonce: ${this.nonce}`;\n        const suffixArray = [uriField, versionField, chainField, nonceField];\n        this.issuedAt = this.issuedAt || new Date().toISOString();\n        suffixArray.push(`Issued At: ${this.issuedAt}`);\n        if (this.expirationTime) {\n            const expiryField = `Expiration Time: ${this.expirationTime}`;\n            suffixArray.push(expiryField);\n        }\n        if (this.notBefore) {\n            suffixArray.push(`Not Before: ${this.notBefore}`);\n        }\n        if (this.requestId) {\n            suffixArray.push(`Request ID: ${this.requestId}`);\n        }\n        if (this.resources) {\n            suffixArray.push([`Resources:`, ...this.resources.map(x => `- ${x}`)].join('\\n'));\n        }\n        const suffix = suffixArray.join('\\n');\n        prefix = [prefix, this.statement].join('\\n\\n');\n        if (this.statement) {\n            prefix += '\\n';\n        }\n        return [prefix, suffix].join('\\n');\n    }\n    /**\n     * This method parses all the fields in the object and creates a messaging for signing\n     * message according with the type defined.\n     * @returns {string} Returns a message ready to be signed according with the\n     * type defined in the object.\n     */\n    prepareMessage() {\n        let message;\n        switch (this.version) {\n            case '1': {\n                message = this.toMessage();\n                break;\n            }\n            default: {\n                message = this.toMessage();\n                break;\n            }\n        }\n        return message;\n    }\n    /**\n     * @deprecated\n     * Verifies the integrity of the object by matching its signature.\n     * @param signature Signature to match the address in the message.\n     * @param provider Ethers provider to be used for EIP-1271 validation\n     */\n    validate(signature, provider) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('validate() has been deprecated, please update your code to use verify(). validate() may be removed in future versions.');\n            return this.verify({ signature }, { provider, suppressExceptions: false })\n                .then(({ data }) => data)\n                .catch(({ error }) => {\n                throw error;\n            });\n        });\n    }\n    /**\n     * Verifies the integrity of the object by matching its signature.\n     * @param params Parameters to verify the integrity of the message, signature is required.\n     * @returns {Promise<SiweMessage>} This object if valid.\n     */\n    verify(params, opts = { suppressExceptions: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                var _a, _b, _c;\n                const fail = result => {\n                    if (opts.suppressExceptions) {\n                        return resolve(result);\n                    }\n                    else {\n                        return reject(result);\n                    }\n                };\n                const invalidParams = (0, utils_1.checkInvalidKeys)(params, types_1.VerifyParamsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidParams.join(', ')} is/are not valid key(s) for VerifyParams.`),\n                    });\n                }\n                const invalidOpts = (0, utils_1.checkInvalidKeys)(opts, types_1.VerifyOptsKeys);\n                if (invalidParams.length > 0) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new Error(`${invalidOpts.join(', ')} is/are not valid key(s) for VerifyOpts.`),\n                    });\n                }\n                const { signature, scheme, domain, nonce, time } = params;\n                /** Scheme for domain binding */\n                if (scheme && scheme !== this.scheme) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.SCHEME_MISMATCH, scheme, this.scheme),\n                    });\n                }\n                /** Domain binding */\n                if (domain && domain !== this.domain) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.DOMAIN_MISMATCH, domain, this.domain),\n                    });\n                }\n                /** Nonce binding */\n                if (nonce && nonce !== this.nonce) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: new types_1.SiweError(types_1.SiweErrorType.NONCE_MISMATCH, nonce, this.nonce),\n                    });\n                }\n                /** Check time or now */\n                const checkTime = new Date(time || new Date());\n                /** Message not expired */\n                if (this.expirationTime) {\n                    const expirationDate = new Date(this.expirationTime);\n                    if (checkTime.getTime() >= expirationDate.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.EXPIRED_MESSAGE, `${checkTime.toISOString()} < ${expirationDate.toISOString()}`, `${checkTime.toISOString()} >= ${expirationDate.toISOString()}`),\n                        });\n                    }\n                }\n                /** Message is valid already */\n                if (this.notBefore) {\n                    const notBefore = new Date(this.notBefore);\n                    if (checkTime.getTime() < notBefore.getTime()) {\n                        fail({\n                            success: false,\n                            data: this,\n                            error: new types_1.SiweError(types_1.SiweErrorType.NOT_YET_VALID_MESSAGE, `${checkTime.toISOString()} >= ${notBefore.toISOString()}`, `${checkTime.toISOString()} < ${notBefore.toISOString()}`),\n                        });\n                    }\n                }\n                let EIP4361Message;\n                try {\n                    EIP4361Message = this.prepareMessage();\n                }\n                catch (e) {\n                    fail({\n                        success: false,\n                        data: this,\n                        error: e,\n                    });\n                }\n                /** Recover address from signature */\n                let addr;\n                try {\n                    addr = (0, ethersCompat_1.verifyMessage)(EIP4361Message, signature);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n                /** Match signature with message's address */\n                if (addr === this.address) {\n                    return resolve({\n                        success: true,\n                        data: this,\n                    });\n                }\n                else {\n                    const EIP1271Promise = (0, utils_1.checkContractWalletSignature)(this, signature, opts.provider)\n                        .then(isValid => {\n                        if (!isValid) {\n                            return {\n                                success: false,\n                                data: this,\n                                error: new types_1.SiweError(types_1.SiweErrorType.INVALID_SIGNATURE, addr, `Resolved address to be ${this.address}`),\n                            };\n                        }\n                        return {\n                            success: true,\n                            data: this,\n                        };\n                    })\n                        .catch(error => {\n                        return {\n                            success: false,\n                            data: this,\n                            error,\n                        };\n                    });\n                    Promise.all([\n                        EIP1271Promise,\n                        (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.verificationFallback) === null || _a === void 0 ? void 0 : _a.call(opts, params, opts, this, EIP1271Promise)) === null || _b === void 0 ? void 0 : _b.then(res => res)) === null || _c === void 0 ? void 0 : _c.catch((res) => res),\n                    ]).then(([EIP1271Response, fallbackResponse]) => {\n                        if (fallbackResponse) {\n                            if (fallbackResponse.success) {\n                                return resolve(fallbackResponse);\n                            }\n                            else {\n                                fail(fallbackResponse);\n                            }\n                        }\n                        else {\n                            if (EIP1271Response.success) {\n                                return resolve(EIP1271Response);\n                            }\n                            else {\n                                fail(EIP1271Response);\n                            }\n                        }\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Validates the values of this object fields.\n     * @throws Throws an {ErrorType} if a field is invalid.\n     */\n    validateMessage(...args) {\n        var _a;\n        /** Checks if the user might be using the function to verify instead of validate. */\n        if (args.length > 0) {\n            throw new types_1.SiweError(types_1.SiweErrorType.UNABLE_TO_PARSE, `Unexpected argument in the validateMessage function.`);\n        }\n        /** `domain` check. */\n        if (!this.domain ||\n            this.domain.length === 0 ||\n            !/[^#?]*/.test(this.domain)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_DOMAIN, `${this.domain} to be a valid domain.`);\n        }\n        /** EIP-55 `address` check. */\n        if (!(0, siwe_parser_1.isEIP55Address)(this.address)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_ADDRESS, (0, ethersCompat_1.getAddress)(this.address), this.address);\n        }\n        /** Check if the URI is valid. */\n        if (!uri.isUri(this.uri)) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_URI, `${this.uri} to be a valid uri.`);\n        }\n        /** Check if the version is 1. */\n        if (this.version !== '1') {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_MESSAGE_VERSION, '1', this.version);\n        }\n        /** Check if the nonce is alphanumeric and bigger then 8 characters */\n        const nonce = (_a = this === null || this === void 0 ? void 0 : this.nonce) === null || _a === void 0 ? void 0 : _a.match(/[a-zA-Z0-9]{8,}/);\n        if (!nonce || this.nonce.length < 8 || nonce[0] !== this.nonce) {\n            throw new types_1.SiweError(types_1.SiweErrorType.INVALID_NONCE, `Length > 8 (${nonce.length}). Alphanumeric.`, this.nonce);\n        }\n        /** `issuedAt` conforms to ISO-8601 and is a valid date. */\n        if (this.issuedAt) {\n            if (!(0, utils_1.isValidISO8601Date)(this.issuedAt)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `expirationTime` conforms to ISO-8601 and is a valid date. */\n        if (this.expirationTime) {\n            if (!(0, utils_1.isValidISO8601Date)(this.expirationTime)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n        /** `notBefore` conforms to ISO-8601 and is a valid date. */\n        if (this.notBefore) {\n            if (!(0, utils_1.isValidISO8601Date)(this.notBefore)) {\n                throw new Error(types_1.SiweErrorType.INVALID_TIME_FORMAT);\n            }\n        }\n    }\n}\nexports.SiweMessage = SiweMessage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQjtBQUNBLHNCQUFzQixtQkFBTyxDQUFDLHlGQUF1QjtBQUNyRCx5QkFBeUIsbUJBQU8sQ0FBQywwREFBVztBQUM1Qyx1QkFBdUIsbUJBQU8sQ0FBQyxzRUFBZ0I7QUFDL0MsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQVM7QUFDakMsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzQkFBc0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFFBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsWUFBWSxLQUFLLFlBQVk7QUFDMUUsMEJBQTBCLGFBQWE7QUFDdkMsaUNBQWlDLFNBQVM7QUFDMUM7QUFDQSx5Q0FBeUMsYUFBYTtBQUN0RDtBQUNBO0FBQ0E7QUFDQSwwREFBMEQsQ0FBRztBQUM3RCxxQ0FBcUMsV0FBVztBQUNoRDtBQUNBO0FBQ0EsdUNBQXVDLGNBQWM7QUFDckQ7QUFDQSxvREFBb0Qsb0JBQW9CO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxlQUFlO0FBQzNEO0FBQ0E7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRDtBQUNBO0FBQ0EsNEVBQTRFLEVBQUU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLFdBQVcsSUFBSSxxQ0FBcUM7QUFDckYseUJBQXlCLE1BQU07QUFDL0IsMEJBQTBCLE9BQU87QUFDakM7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHNCQUFzQjtBQUN2QztBQUNBLDRCQUE0QiwyQkFBMkI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsMEJBQTBCO0FBQ3RFLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsd0JBQXdCO0FBQ3BFLHFCQUFxQjtBQUNyQjtBQUNBLHdCQUF3Qix5Q0FBeUM7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUdBQW1HLHlCQUF5QixJQUFJLDZCQUE2QixNQUFNLHlCQUF5QixLQUFLLDZCQUE2QjtBQUM5Tix5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUdBQXlHLHlCQUF5QixLQUFLLHdCQUF3QixNQUFNLHlCQUF5QixJQUFJLHdCQUF3QjtBQUMxTix5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzSUFBc0ksYUFBYTtBQUNuSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsYUFBYTtBQUM5RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSxVQUFVO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtJQUErSSxHQUFHO0FBQ2xKO0FBQ0EsNEZBQTRGLGFBQWE7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc3dhcHBlci1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9zaXdlL2Rpc3QvY2xpZW50LmpzP2FjMGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaXdlTWVzc2FnZSA9IHZvaWQgMDtcbi8vIFRPRE86IEZpZ3VyZSBvdXQgaG93IHRvIGdldCB0eXBlcyBmcm9tIHRoaXMgbGliOlxuY29uc3Qgc2l3ZV9wYXJzZXJfMSA9IHJlcXVpcmUoXCJAc3BydWNlaWQvc2l3ZS1wYXJzZXJcIik7XG5jb25zdCB1cmkgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcInZhbGlkLXVybFwiKSk7XG5jb25zdCBldGhlcnNDb21wYXRfMSA9IHJlcXVpcmUoXCIuL2V0aGVyc0NvbXBhdFwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNsYXNzIFNpd2VNZXNzYWdlIHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgcGFyc2VkIFNpZ24tSW4gd2l0aCBFdGhlcmV1bSBNZXNzYWdlIChFSVAtNDM2MSkgb2JqZWN0IGZyb20gYVxuICAgICAqIHN0cmluZyBvciBhbiBvYmplY3QuIElmIGEgc3RyaW5nIGlzIHVzZWQgYW4gQUJORiBwYXJzZXIgaXMgY2FsbGVkIHRvXG4gICAgICogdmFsaWRhdGUgdGhlIHBhcmFtZXRlciwgb3RoZXJ3aXNlIHRoZSBmaWVsZHMgYXJlIGF0dHJpYnV0ZWQuXG4gICAgICogQHBhcmFtIHBhcmFtIHtzdHJpbmcgfCBTaXdlTWVzc2FnZX0gU2lnbiBtZXNzYWdlIGFzIGEgc3RyaW5nIG9yIGFuIG9iamVjdC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihwYXJhbSkge1xuICAgICAgICBpZiAodHlwZW9mIHBhcmFtID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkTWVzc2FnZSA9IG5ldyBzaXdlX3BhcnNlcl8xLlBhcnNlZE1lc3NhZ2UocGFyYW0pO1xuICAgICAgICAgICAgdGhpcy5zY2hlbWUgPSBwYXJzZWRNZXNzYWdlLnNjaGVtZTtcbiAgICAgICAgICAgIHRoaXMuZG9tYWluID0gcGFyc2VkTWVzc2FnZS5kb21haW47XG4gICAgICAgICAgICB0aGlzLmFkZHJlc3MgPSBwYXJzZWRNZXNzYWdlLmFkZHJlc3M7XG4gICAgICAgICAgICB0aGlzLnN0YXRlbWVudCA9IHBhcnNlZE1lc3NhZ2Uuc3RhdGVtZW50O1xuICAgICAgICAgICAgdGhpcy51cmkgPSBwYXJzZWRNZXNzYWdlLnVyaTtcbiAgICAgICAgICAgIHRoaXMudmVyc2lvbiA9IHBhcnNlZE1lc3NhZ2UudmVyc2lvbjtcbiAgICAgICAgICAgIHRoaXMubm9uY2UgPSBwYXJzZWRNZXNzYWdlLm5vbmNlO1xuICAgICAgICAgICAgdGhpcy5pc3N1ZWRBdCA9IHBhcnNlZE1lc3NhZ2UuaXNzdWVkQXQ7XG4gICAgICAgICAgICB0aGlzLmV4cGlyYXRpb25UaW1lID0gcGFyc2VkTWVzc2FnZS5leHBpcmF0aW9uVGltZTtcbiAgICAgICAgICAgIHRoaXMubm90QmVmb3JlID0gcGFyc2VkTWVzc2FnZS5ub3RCZWZvcmU7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3RJZCA9IHBhcnNlZE1lc3NhZ2UucmVxdWVzdElkO1xuICAgICAgICAgICAgdGhpcy5jaGFpbklkID0gcGFyc2VkTWVzc2FnZS5jaGFpbklkO1xuICAgICAgICAgICAgdGhpcy5yZXNvdXJjZXMgPSBwYXJzZWRNZXNzYWdlLnJlc291cmNlcztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2NoZW1lID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLnNjaGVtZTtcbiAgICAgICAgICAgIHRoaXMuZG9tYWluID0gcGFyYW0uZG9tYWluO1xuICAgICAgICAgICAgdGhpcy5hZGRyZXNzID0gcGFyYW0uYWRkcmVzcztcbiAgICAgICAgICAgIHRoaXMuc3RhdGVtZW50ID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLnN0YXRlbWVudDtcbiAgICAgICAgICAgIHRoaXMudXJpID0gcGFyYW0udXJpO1xuICAgICAgICAgICAgdGhpcy52ZXJzaW9uID0gcGFyYW0udmVyc2lvbjtcbiAgICAgICAgICAgIHRoaXMuY2hhaW5JZCA9IHBhcmFtLmNoYWluSWQ7XG4gICAgICAgICAgICB0aGlzLm5vbmNlID0gcGFyYW0ubm9uY2U7XG4gICAgICAgICAgICB0aGlzLmlzc3VlZEF0ID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLmlzc3VlZEF0O1xuICAgICAgICAgICAgdGhpcy5leHBpcmF0aW9uVGltZSA9IHBhcmFtID09PSBudWxsIHx8IHBhcmFtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJhbS5leHBpcmF0aW9uVGltZTtcbiAgICAgICAgICAgIHRoaXMubm90QmVmb3JlID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLm5vdEJlZm9yZTtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdElkID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLnJlcXVlc3RJZDtcbiAgICAgICAgICAgIHRoaXMucmVzb3VyY2VzID0gcGFyYW0gPT09IG51bGwgfHwgcGFyYW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHBhcmFtLnJlc291cmNlcztcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdGhpcy5jaGFpbklkID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhaW5JZCA9ICgwLCBzaXdlX3BhcnNlcl8xLnBhcnNlSW50ZWdlck51bWJlcikodGhpcy5jaGFpbklkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLm5vbmNlID0gdGhpcy5ub25jZSB8fCAoMCwgdXRpbHNfMS5nZW5lcmF0ZU5vbmNlKSgpO1xuICAgICAgICB0aGlzLnZhbGlkYXRlTWVzc2FnZSgpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIHJldHJpZXZlIGFuIEVJUC00MzYxIGZvcm1hdGVkIG1lc3NhZ2UgZm9yXG4gICAgICogc2lnbmF0dXJlLCBhbHRob3VnaCB5b3UgY2FuIGNhbGwgaXQgZGlyZWN0bHkgaXQncyBhZHZpc2VkIHRvIHVzZVxuICAgICAqIFtwcmVwYXJlTWVzc2FnZSgpXSBpbnN0ZWFkIHdoaWNoIHdpbGwgcmVzb2x2ZSB0byB0aGUgY29ycmVjdCBtZXRob2QgYmFzZWRcbiAgICAgKiBvbiB0aGUgW3R5cGVdIGF0dHJpYnV0ZSBvZiB0aGlzIG9iamVjdCwgaW4gY2FzZSBvZiBvdGhlciBmb3JtYXRzIGJlaW5nXG4gICAgICogaW1wbGVtZW50ZWQuXG4gICAgICogQHJldHVybnMge3N0cmluZ30gRUlQLTQzNjEgZm9ybWF0ZWQgbWVzc2FnZSwgcmVhZHkgZm9yIEVJUC0xOTEgc2lnbmluZy5cbiAgICAgKi9cbiAgICB0b01lc3NhZ2UoKSB7XG4gICAgICAgIC8qKiBWYWxpZGF0ZXMgYWxsIGZpZWxkcyBvZiB0aGUgb2JqZWN0ICovXG4gICAgICAgIHRoaXMudmFsaWRhdGVNZXNzYWdlKCk7XG4gICAgICAgIGNvbnN0IGhlYWRlclByZWZ4ID0gdGhpcy5zY2hlbWUgPyBgJHt0aGlzLnNjaGVtZX06Ly8ke3RoaXMuZG9tYWlufWAgOiB0aGlzLmRvbWFpbjtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYCR7aGVhZGVyUHJlZnh9IHdhbnRzIHlvdSB0byBzaWduIGluIHdpdGggeW91ciBFdGhlcmV1bSBhY2NvdW50OmA7XG4gICAgICAgIGNvbnN0IHVyaUZpZWxkID0gYFVSSTogJHt0aGlzLnVyaX1gO1xuICAgICAgICBsZXQgcHJlZml4ID0gW2hlYWRlciwgdGhpcy5hZGRyZXNzXS5qb2luKCdcXG4nKTtcbiAgICAgICAgY29uc3QgdmVyc2lvbkZpZWxkID0gYFZlcnNpb246ICR7dGhpcy52ZXJzaW9ufWA7XG4gICAgICAgIGlmICghdGhpcy5ub25jZSkge1xuICAgICAgICAgICAgdGhpcy5ub25jZSA9ICgwLCB1dGlsc18xLmdlbmVyYXRlTm9uY2UpKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY2hhaW5GaWVsZCA9IGBDaGFpbiBJRDogYCArIHRoaXMuY2hhaW5JZCB8fCAnMSc7XG4gICAgICAgIGNvbnN0IG5vbmNlRmllbGQgPSBgTm9uY2U6ICR7dGhpcy5ub25jZX1gO1xuICAgICAgICBjb25zdCBzdWZmaXhBcnJheSA9IFt1cmlGaWVsZCwgdmVyc2lvbkZpZWxkLCBjaGFpbkZpZWxkLCBub25jZUZpZWxkXTtcbiAgICAgICAgdGhpcy5pc3N1ZWRBdCA9IHRoaXMuaXNzdWVkQXQgfHwgbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xuICAgICAgICBzdWZmaXhBcnJheS5wdXNoKGBJc3N1ZWQgQXQ6ICR7dGhpcy5pc3N1ZWRBdH1gKTtcbiAgICAgICAgaWYgKHRoaXMuZXhwaXJhdGlvblRpbWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4cGlyeUZpZWxkID0gYEV4cGlyYXRpb24gVGltZTogJHt0aGlzLmV4cGlyYXRpb25UaW1lfWA7XG4gICAgICAgICAgICBzdWZmaXhBcnJheS5wdXNoKGV4cGlyeUZpZWxkKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5ub3RCZWZvcmUpIHtcbiAgICAgICAgICAgIHN1ZmZpeEFycmF5LnB1c2goYE5vdCBCZWZvcmU6ICR7dGhpcy5ub3RCZWZvcmV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucmVxdWVzdElkKSB7XG4gICAgICAgICAgICBzdWZmaXhBcnJheS5wdXNoKGBSZXF1ZXN0IElEOiAke3RoaXMucmVxdWVzdElkfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnJlc291cmNlcykge1xuICAgICAgICAgICAgc3VmZml4QXJyYXkucHVzaChbYFJlc291cmNlczpgLCAuLi50aGlzLnJlc291cmNlcy5tYXAoeCA9PiBgLSAke3h9YCldLmpvaW4oJ1xcbicpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdWZmaXggPSBzdWZmaXhBcnJheS5qb2luKCdcXG4nKTtcbiAgICAgICAgcHJlZml4ID0gW3ByZWZpeCwgdGhpcy5zdGF0ZW1lbnRdLmpvaW4oJ1xcblxcbicpO1xuICAgICAgICBpZiAodGhpcy5zdGF0ZW1lbnQpIHtcbiAgICAgICAgICAgIHByZWZpeCArPSAnXFxuJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW3ByZWZpeCwgc3VmZml4XS5qb2luKCdcXG4nKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBtZXRob2QgcGFyc2VzIGFsbCB0aGUgZmllbGRzIGluIHRoZSBvYmplY3QgYW5kIGNyZWF0ZXMgYSBtZXNzYWdpbmcgZm9yIHNpZ25pbmdcbiAgICAgKiBtZXNzYWdlIGFjY29yZGluZyB3aXRoIHRoZSB0eXBlIGRlZmluZWQuXG4gICAgICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyBhIG1lc3NhZ2UgcmVhZHkgdG8gYmUgc2lnbmVkIGFjY29yZGluZyB3aXRoIHRoZVxuICAgICAqIHR5cGUgZGVmaW5lZCBpbiB0aGUgb2JqZWN0LlxuICAgICAqL1xuICAgIHByZXBhcmVNZXNzYWdlKCkge1xuICAgICAgICBsZXQgbWVzc2FnZTtcbiAgICAgICAgc3dpdGNoICh0aGlzLnZlcnNpb24pIHtcbiAgICAgICAgICAgIGNhc2UgJzEnOiB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZSA9IHRoaXMudG9NZXNzYWdlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICAgICAgbWVzc2FnZSA9IHRoaXMudG9NZXNzYWdlKCk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBkZXByZWNhdGVkXG4gICAgICogVmVyaWZpZXMgdGhlIGludGVncml0eSBvZiB0aGUgb2JqZWN0IGJ5IG1hdGNoaW5nIGl0cyBzaWduYXR1cmUuXG4gICAgICogQHBhcmFtIHNpZ25hdHVyZSBTaWduYXR1cmUgdG8gbWF0Y2ggdGhlIGFkZHJlc3MgaW4gdGhlIG1lc3NhZ2UuXG4gICAgICogQHBhcmFtIHByb3ZpZGVyIEV0aGVycyBwcm92aWRlciB0byBiZSB1c2VkIGZvciBFSVAtMTI3MSB2YWxpZGF0aW9uXG4gICAgICovXG4gICAgdmFsaWRhdGUoc2lnbmF0dXJlLCBwcm92aWRlcikge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCd2YWxpZGF0ZSgpIGhhcyBiZWVuIGRlcHJlY2F0ZWQsIHBsZWFzZSB1cGRhdGUgeW91ciBjb2RlIHRvIHVzZSB2ZXJpZnkoKS4gdmFsaWRhdGUoKSBtYXkgYmUgcmVtb3ZlZCBpbiBmdXR1cmUgdmVyc2lvbnMuJyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy52ZXJpZnkoeyBzaWduYXR1cmUgfSwgeyBwcm92aWRlciwgc3VwcHJlc3NFeGNlcHRpb25zOiBmYWxzZSB9KVxuICAgICAgICAgICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gZGF0YSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKHsgZXJyb3IgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWZXJpZmllcyB0aGUgaW50ZWdyaXR5IG9mIHRoZSBvYmplY3QgYnkgbWF0Y2hpbmcgaXRzIHNpZ25hdHVyZS5cbiAgICAgKiBAcGFyYW0gcGFyYW1zIFBhcmFtZXRlcnMgdG8gdmVyaWZ5IHRoZSBpbnRlZ3JpdHkgb2YgdGhlIG1lc3NhZ2UsIHNpZ25hdHVyZSBpcyByZXF1aXJlZC5cbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTxTaXdlTWVzc2FnZT59IFRoaXMgb2JqZWN0IGlmIHZhbGlkLlxuICAgICAqL1xuICAgIHZlcmlmeShwYXJhbXMsIG9wdHMgPSB7IHN1cHByZXNzRXhjZXB0aW9uczogZmFsc2UgfSkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgICAgICAgICBjb25zdCBmYWlsID0gcmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdHMuc3VwcHJlc3NFeGNlcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBjb25zdCBpbnZhbGlkUGFyYW1zID0gKDAsIHV0aWxzXzEuY2hlY2tJbnZhbGlkS2V5cykocGFyYW1zLCB0eXBlc18xLlZlcmlmeVBhcmFtc0tleXMpO1xuICAgICAgICAgICAgICAgIGlmIChpbnZhbGlkUGFyYW1zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgZmFpbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbmV3IEVycm9yKGAke2ludmFsaWRQYXJhbXMuam9pbignLCAnKX0gaXMvYXJlIG5vdCB2YWxpZCBrZXkocykgZm9yIFZlcmlmeVBhcmFtcy5gKSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGludmFsaWRPcHRzID0gKDAsIHV0aWxzXzEuY2hlY2tJbnZhbGlkS2V5cykob3B0cywgdHlwZXNfMS5WZXJpZnlPcHRzS2V5cyk7XG4gICAgICAgICAgICAgICAgaWYgKGludmFsaWRQYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBmYWlsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBuZXcgRXJyb3IoYCR7aW52YWxpZE9wdHMuam9pbignLCAnKX0gaXMvYXJlIG5vdCB2YWxpZCBrZXkocykgZm9yIFZlcmlmeU9wdHMuYCksXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB7IHNpZ25hdHVyZSwgc2NoZW1lLCBkb21haW4sIG5vbmNlLCB0aW1lIH0gPSBwYXJhbXM7XG4gICAgICAgICAgICAgICAgLyoqIFNjaGVtZSBmb3IgZG9tYWluIGJpbmRpbmcgKi9cbiAgICAgICAgICAgICAgICBpZiAoc2NoZW1lICYmIHNjaGVtZSAhPT0gdGhpcy5zY2hlbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZmFpbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuU2l3ZUVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5TQ0hFTUVfTUlTTUFUQ0gsIHNjaGVtZSwgdGhpcy5zY2hlbWUpLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLyoqIERvbWFpbiBiaW5kaW5nICovXG4gICAgICAgICAgICAgICAgaWYgKGRvbWFpbiAmJiBkb21haW4gIT09IHRoaXMuZG9tYWluKSB7XG4gICAgICAgICAgICAgICAgICAgIGZhaWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuRE9NQUlOX01JU01BVENILCBkb21haW4sIHRoaXMuZG9tYWluKSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qKiBOb25jZSBiaW5kaW5nICovXG4gICAgICAgICAgICAgICAgaWYgKG5vbmNlICYmIG5vbmNlICE9PSB0aGlzLm5vbmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZhaWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuTk9OQ0VfTUlTTUFUQ0gsIG5vbmNlLCB0aGlzLm5vbmNlKSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qKiBDaGVjayB0aW1lIG9yIG5vdyAqL1xuICAgICAgICAgICAgICAgIGNvbnN0IGNoZWNrVGltZSA9IG5ldyBEYXRlKHRpbWUgfHwgbmV3IERhdGUoKSk7XG4gICAgICAgICAgICAgICAgLyoqIE1lc3NhZ2Ugbm90IGV4cGlyZWQgKi9cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5leHBpcmF0aW9uVGltZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBleHBpcmF0aW9uRGF0ZSA9IG5ldyBEYXRlKHRoaXMuZXhwaXJhdGlvblRpbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tUaW1lLmdldFRpbWUoKSA+PSBleHBpcmF0aW9uRGF0ZS5nZXRUaW1lKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuRVhQSVJFRF9NRVNTQUdFLCBgJHtjaGVja1RpbWUudG9JU09TdHJpbmcoKX0gPCAke2V4cGlyYXRpb25EYXRlLnRvSVNPU3RyaW5nKCl9YCwgYCR7Y2hlY2tUaW1lLnRvSVNPU3RyaW5nKCl9ID49ICR7ZXhwaXJhdGlvbkRhdGUudG9JU09TdHJpbmcoKX1gKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qKiBNZXNzYWdlIGlzIHZhbGlkIGFscmVhZHkgKi9cbiAgICAgICAgICAgICAgICBpZiAodGhpcy5ub3RCZWZvcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm90QmVmb3JlID0gbmV3IERhdGUodGhpcy5ub3RCZWZvcmUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2hlY2tUaW1lLmdldFRpbWUoKSA8IG5vdEJlZm9yZS5nZXRUaW1lKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3I6IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuTk9UX1lFVF9WQUxJRF9NRVNTQUdFLCBgJHtjaGVja1RpbWUudG9JU09TdHJpbmcoKX0gPj0gJHtub3RCZWZvcmUudG9JU09TdHJpbmcoKX1gLCBgJHtjaGVja1RpbWUudG9JU09TdHJpbmcoKX0gPCAke25vdEJlZm9yZS50b0lTT1N0cmluZygpfWApLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbGV0IEVJUDQzNjFNZXNzYWdlO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIEVJUDQzNjFNZXNzYWdlID0gdGhpcy5wcmVwYXJlTWVzc2FnZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBmYWlsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBlLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLyoqIFJlY292ZXIgYWRkcmVzcyBmcm9tIHNpZ25hdHVyZSAqL1xuICAgICAgICAgICAgICAgIGxldCBhZGRyO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGFkZHIgPSAoMCwgZXRoZXJzQ29tcGF0XzEudmVyaWZ5TWVzc2FnZSkoRUlQNDM2MU1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8qKiBNYXRjaCBzaWduYXR1cmUgd2l0aCBtZXNzYWdlJ3MgYWRkcmVzcyAqL1xuICAgICAgICAgICAgICAgIGlmIChhZGRyID09PSB0aGlzLmFkZHJlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgRUlQMTI3MVByb21pc2UgPSAoMCwgdXRpbHNfMS5jaGVja0NvbnRyYWN0V2FsbGV0U2lnbmF0dXJlKSh0aGlzLCBzaWduYXR1cmUsIG9wdHMucHJvdmlkZXIpXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihpc1ZhbGlkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNWYWxpZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogbmV3IHR5cGVzXzEuU2l3ZUVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5JTlZBTElEX1NJR05BVFVSRSwgYWRkciwgYFJlc29sdmVkIGFkZHJlc3MgdG8gYmUgJHt0aGlzLmFkZHJlc3N9YCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB0aGlzLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IHRoaXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXJyb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgICAgICAgICAgRUlQMTI3MVByb21pc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAoX2MgPSAoX2IgPSAoX2EgPSBvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMudmVyaWZpY2F0aW9uRmFsbGJhY2spID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKG9wdHMsIHBhcmFtcywgb3B0cywgdGhpcywgRUlQMTI3MVByb21pc2UpKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudGhlbihyZXMgPT4gcmVzKSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmNhdGNoKChyZXMpID0+IHJlcyksXG4gICAgICAgICAgICAgICAgICAgIF0pLnRoZW4oKFtFSVAxMjcxUmVzcG9uc2UsIGZhbGxiYWNrUmVzcG9uc2VdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmFsbGJhY2tSZXNwb25zZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmYWxsYmFja1Jlc3BvbnNlLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUoZmFsbGJhY2tSZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYWlsKGZhbGxiYWNrUmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChFSVAxMjcxUmVzcG9uc2Uuc3VjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShFSVAxMjcxUmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFpbChFSVAxMjcxUmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBWYWxpZGF0ZXMgdGhlIHZhbHVlcyBvZiB0aGlzIG9iamVjdCBmaWVsZHMuXG4gICAgICogQHRocm93cyBUaHJvd3MgYW4ge0Vycm9yVHlwZX0gaWYgYSBmaWVsZCBpcyBpbnZhbGlkLlxuICAgICAqL1xuICAgIHZhbGlkYXRlTWVzc2FnZSguLi5hcmdzKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgLyoqIENoZWNrcyBpZiB0aGUgdXNlciBtaWdodCBiZSB1c2luZyB0aGUgZnVuY3Rpb24gdG8gdmVyaWZ5IGluc3RlYWQgb2YgdmFsaWRhdGUuICovXG4gICAgICAgIGlmIChhcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuVU5BQkxFX1RPX1BBUlNFLCBgVW5leHBlY3RlZCBhcmd1bWVudCBpbiB0aGUgdmFsaWRhdGVNZXNzYWdlIGZ1bmN0aW9uLmApO1xuICAgICAgICB9XG4gICAgICAgIC8qKiBgZG9tYWluYCBjaGVjay4gKi9cbiAgICAgICAgaWYgKCF0aGlzLmRvbWFpbiB8fFxuICAgICAgICAgICAgdGhpcy5kb21haW4ubGVuZ3RoID09PSAwIHx8XG4gICAgICAgICAgICAhL1teIz9dKi8udGVzdCh0aGlzLmRvbWFpbikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuSU5WQUxJRF9ET01BSU4sIGAke3RoaXMuZG9tYWlufSB0byBiZSBhIHZhbGlkIGRvbWFpbi5gKTtcbiAgICAgICAgfVxuICAgICAgICAvKiogRUlQLTU1IGBhZGRyZXNzYCBjaGVjay4gKi9cbiAgICAgICAgaWYgKCEoMCwgc2l3ZV9wYXJzZXJfMS5pc0VJUDU1QWRkcmVzcykodGhpcy5hZGRyZXNzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IHR5cGVzXzEuU2l3ZUVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5JTlZBTElEX0FERFJFU1MsICgwLCBldGhlcnNDb21wYXRfMS5nZXRBZGRyZXNzKSh0aGlzLmFkZHJlc3MpLCB0aGlzLmFkZHJlc3MpO1xuICAgICAgICB9XG4gICAgICAgIC8qKiBDaGVjayBpZiB0aGUgVVJJIGlzIHZhbGlkLiAqL1xuICAgICAgICBpZiAoIXVyaS5pc1VyaSh0aGlzLnVyaSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuSU5WQUxJRF9VUkksIGAke3RoaXMudXJpfSB0byBiZSBhIHZhbGlkIHVyaS5gKTtcbiAgICAgICAgfVxuICAgICAgICAvKiogQ2hlY2sgaWYgdGhlIHZlcnNpb24gaXMgMS4gKi9cbiAgICAgICAgaWYgKHRoaXMudmVyc2lvbiAhPT0gJzEnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgdHlwZXNfMS5TaXdlRXJyb3IodHlwZXNfMS5TaXdlRXJyb3JUeXBlLklOVkFMSURfTUVTU0FHRV9WRVJTSU9OLCAnMScsIHRoaXMudmVyc2lvbik7XG4gICAgICAgIH1cbiAgICAgICAgLyoqIENoZWNrIGlmIHRoZSBub25jZSBpcyBhbHBoYW51bWVyaWMgYW5kIGJpZ2dlciB0aGVuIDggY2hhcmFjdGVycyAqL1xuICAgICAgICBjb25zdCBub25jZSA9IChfYSA9IHRoaXMgPT09IG51bGwgfHwgdGhpcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogdGhpcy5ub25jZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm1hdGNoKC9bYS16QS1aMC05XXs4LH0vKTtcbiAgICAgICAgaWYgKCFub25jZSB8fCB0aGlzLm5vbmNlLmxlbmd0aCA8IDggfHwgbm9uY2VbMF0gIT09IHRoaXMubm9uY2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyB0eXBlc18xLlNpd2VFcnJvcih0eXBlc18xLlNpd2VFcnJvclR5cGUuSU5WQUxJRF9OT05DRSwgYExlbmd0aCA+IDggKCR7bm9uY2UubGVuZ3RofSkuIEFscGhhbnVtZXJpYy5gLCB0aGlzLm5vbmNlKTtcbiAgICAgICAgfVxuICAgICAgICAvKiogYGlzc3VlZEF0YCBjb25mb3JtcyB0byBJU08tODYwMSBhbmQgaXMgYSB2YWxpZCBkYXRlLiAqL1xuICAgICAgICBpZiAodGhpcy5pc3N1ZWRBdCkge1xuICAgICAgICAgICAgaWYgKCEoMCwgdXRpbHNfMS5pc1ZhbGlkSVNPODYwMURhdGUpKHRoaXMuaXNzdWVkQXQpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5JTlZBTElEX1RJTUVfRk9STUFUKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvKiogYGV4cGlyYXRpb25UaW1lYCBjb25mb3JtcyB0byBJU08tODYwMSBhbmQgaXMgYSB2YWxpZCBkYXRlLiAqL1xuICAgICAgICBpZiAodGhpcy5leHBpcmF0aW9uVGltZSkge1xuICAgICAgICAgICAgaWYgKCEoMCwgdXRpbHNfMS5pc1ZhbGlkSVNPODYwMURhdGUpKHRoaXMuZXhwaXJhdGlvblRpbWUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5JTlZBTElEX1RJTUVfRk9STUFUKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvKiogYG5vdEJlZm9yZWAgY29uZm9ybXMgdG8gSVNPLTg2MDEgYW5kIGlzIGEgdmFsaWQgZGF0ZS4gKi9cbiAgICAgICAgaWYgKHRoaXMubm90QmVmb3JlKSB7XG4gICAgICAgICAgICBpZiAoISgwLCB1dGlsc18xLmlzVmFsaWRJU084NjAxRGF0ZSkodGhpcy5ub3RCZWZvcmUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHR5cGVzXzEuU2l3ZUVycm9yVHlwZS5JTlZBTElEX1RJTUVfRk9STUFUKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuU2l3ZU1lc3NhZ2UgPSBTaXdlTWVzc2FnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/siwe/dist/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/siwe/dist/ethersCompat.js":
/*!************************************************!*\
  !*** ./node_modules/siwe/dist/ethersCompat.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getAddress = exports.hashMessage = exports.verifyMessage = void 0;\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.commonjs/index.js\");\nlet ethersVerifyMessage = null;\nlet ethersHashMessage = null;\nlet ethersGetAddress = null;\ntry {\n    // @ts-expect-error -- v6 compatibility hack\n    ethersVerifyMessage = ethers_1.ethers.utils.verifyMessage;\n    // @ts-expect-error -- v6 compatibility hack\n    ethersHashMessage = ethers_1.ethers.utils.hashMessage;\n    // @ts-expect-error -- v6 compatibility hack\n    ethersGetAddress = ethers_1.ethers.utils.getAddress;\n}\ncatch (_a) {\n    ethersVerifyMessage = ethers_1.ethers.verifyMessage;\n    ethersHashMessage = ethers_1.ethers.hashMessage;\n    ethersGetAddress = ethers_1.ethers.getAddress;\n}\nexports.verifyMessage = ethersVerifyMessage;\nexports.hashMessage = ethersHashMessage;\nexports.getAddress = ethersGetAddress;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L2V0aGVyc0NvbXBhdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxtQkFBbUIsR0FBRyxxQkFBcUI7QUFDaEUsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3N3YXBwZXItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L2V0aGVyc0NvbXBhdC5qcz9hZWZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRBZGRyZXNzID0gZXhwb3J0cy5oYXNoTWVzc2FnZSA9IGV4cG9ydHMudmVyaWZ5TWVzc2FnZSA9IHZvaWQgMDtcbmNvbnN0IGV0aGVyc18xID0gcmVxdWlyZShcImV0aGVyc1wiKTtcbmxldCBldGhlcnNWZXJpZnlNZXNzYWdlID0gbnVsbDtcbmxldCBldGhlcnNIYXNoTWVzc2FnZSA9IG51bGw7XG5sZXQgZXRoZXJzR2V0QWRkcmVzcyA9IG51bGw7XG50cnkge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLS0gdjYgY29tcGF0aWJpbGl0eSBoYWNrXG4gICAgZXRoZXJzVmVyaWZ5TWVzc2FnZSA9IGV0aGVyc18xLmV0aGVycy51dGlscy52ZXJpZnlNZXNzYWdlO1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLS0gdjYgY29tcGF0aWJpbGl0eSBoYWNrXG4gICAgZXRoZXJzSGFzaE1lc3NhZ2UgPSBldGhlcnNfMS5ldGhlcnMudXRpbHMuaGFzaE1lc3NhZ2U7XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtLSB2NiBjb21wYXRpYmlsaXR5IGhhY2tcbiAgICBldGhlcnNHZXRBZGRyZXNzID0gZXRoZXJzXzEuZXRoZXJzLnV0aWxzLmdldEFkZHJlc3M7XG59XG5jYXRjaCAoX2EpIHtcbiAgICBldGhlcnNWZXJpZnlNZXNzYWdlID0gZXRoZXJzXzEuZXRoZXJzLnZlcmlmeU1lc3NhZ2U7XG4gICAgZXRoZXJzSGFzaE1lc3NhZ2UgPSBldGhlcnNfMS5ldGhlcnMuaGFzaE1lc3NhZ2U7XG4gICAgZXRoZXJzR2V0QWRkcmVzcyA9IGV0aGVyc18xLmV0aGVycy5nZXRBZGRyZXNzO1xufVxuZXhwb3J0cy52ZXJpZnlNZXNzYWdlID0gZXRoZXJzVmVyaWZ5TWVzc2FnZTtcbmV4cG9ydHMuaGFzaE1lc3NhZ2UgPSBldGhlcnNIYXNoTWVzc2FnZTtcbmV4cG9ydHMuZ2V0QWRkcmVzcyA9IGV0aGVyc0dldEFkZHJlc3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/siwe/dist/ethersCompat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/siwe/dist/siwe.js":
/*!****************************************!*\
  !*** ./node_modules/siwe/dist/siwe.js ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./client */ \"(ssr)/./node_modules/siwe/dist/client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/./node_modules/siwe/dist/types.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/siwe/dist/utils.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3Npd2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLDBEQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyx3REFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsd0RBQVMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zd2FwcGVyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC9zaXdlLmpzPzUxYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jbGllbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsc1wiKSwgZXhwb3J0cyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/siwe/dist/siwe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/siwe/dist/types.js":
/*!*****************************************!*\
  !*** ./node_modules/siwe/dist/types.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SiweErrorType = exports.SiweError = exports.VerifyOptsKeys = exports.VerifyParamsKeys = void 0;\nexports.VerifyParamsKeys = [\n    'signature',\n    'scheme',\n    'domain',\n    'nonce',\n    'time',\n];\nexports.VerifyOptsKeys = [\n    'provider',\n    'suppressExceptions',\n    'verificationFallback',\n];\n/**\n * Interface used to return errors in SiweResponses.\n */\nclass SiweError {\n    constructor(type, expected, received) {\n        this.type = type;\n        this.expected = expected;\n        this.received = received;\n    }\n}\nexports.SiweError = SiweError;\n/**\n * Possible message error types.\n */\nvar SiweErrorType;\n(function (SiweErrorType) {\n    /** `expirationTime` is present and in the past. */\n    SiweErrorType[\"EXPIRED_MESSAGE\"] = \"Expired message.\";\n    /** `domain` is not a valid authority or is empty. */\n    SiweErrorType[\"INVALID_DOMAIN\"] = \"Invalid domain.\";\n    /** `scheme` don't match the scheme provided for verification. */\n    SiweErrorType[\"SCHEME_MISMATCH\"] = \"Scheme does not match provided scheme for verification.\";\n    /** `domain` don't match the domain provided for verification. */\n    SiweErrorType[\"DOMAIN_MISMATCH\"] = \"Domain does not match provided domain for verification.\";\n    /** `nonce` don't match the nonce provided for verification. */\n    SiweErrorType[\"NONCE_MISMATCH\"] = \"Nonce does not match provided nonce for verification.\";\n    /** `address` does not conform to EIP-55 or is not a valid address. */\n    SiweErrorType[\"INVALID_ADDRESS\"] = \"Invalid address.\";\n    /** `uri` does not conform to RFC 3986. */\n    SiweErrorType[\"INVALID_URI\"] = \"URI does not conform to RFC 3986.\";\n    /** `nonce` is smaller then 8 characters or is not alphanumeric */\n    SiweErrorType[\"INVALID_NONCE\"] = \"Nonce size smaller then 8 characters or is not alphanumeric.\";\n    /** `notBefore` is present and in the future. */\n    SiweErrorType[\"NOT_YET_VALID_MESSAGE\"] = \"Message is not valid yet.\";\n    /** Signature doesn't match the address of the message. */\n    SiweErrorType[\"INVALID_SIGNATURE\"] = \"Signature does not match address of the message.\";\n    /** `expirationTime`, `notBefore` or `issuedAt` not complient to ISO-8601. */\n    SiweErrorType[\"INVALID_TIME_FORMAT\"] = \"Invalid time format.\";\n    /** `version` is not 1. */\n    SiweErrorType[\"INVALID_MESSAGE_VERSION\"] = \"Invalid message version.\";\n    /** Thrown when some required field is missing. */\n    SiweErrorType[\"UNABLE_TO_PARSE\"] = \"Unable to parse the message.\";\n})(SiweErrorType = exports.SiweErrorType || (exports.SiweErrorType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLGlCQUFpQixHQUFHLHNCQUFzQixHQUFHLHdCQUF3QjtBQUM3Rix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QyxxQkFBcUIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL3N3YXBwZXItZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3R5cGVzLmpzPzM5N2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNpd2VFcnJvclR5cGUgPSBleHBvcnRzLlNpd2VFcnJvciA9IGV4cG9ydHMuVmVyaWZ5T3B0c0tleXMgPSBleHBvcnRzLlZlcmlmeVBhcmFtc0tleXMgPSB2b2lkIDA7XG5leHBvcnRzLlZlcmlmeVBhcmFtc0tleXMgPSBbXG4gICAgJ3NpZ25hdHVyZScsXG4gICAgJ3NjaGVtZScsXG4gICAgJ2RvbWFpbicsXG4gICAgJ25vbmNlJyxcbiAgICAndGltZScsXG5dO1xuZXhwb3J0cy5WZXJpZnlPcHRzS2V5cyA9IFtcbiAgICAncHJvdmlkZXInLFxuICAgICdzdXBwcmVzc0V4Y2VwdGlvbnMnLFxuICAgICd2ZXJpZmljYXRpb25GYWxsYmFjaycsXG5dO1xuLyoqXG4gKiBJbnRlcmZhY2UgdXNlZCB0byByZXR1cm4gZXJyb3JzIGluIFNpd2VSZXNwb25zZXMuXG4gKi9cbmNsYXNzIFNpd2VFcnJvciB7XG4gICAgY29uc3RydWN0b3IodHlwZSwgZXhwZWN0ZWQsIHJlY2VpdmVkKSB7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIHRoaXMuZXhwZWN0ZWQgPSBleHBlY3RlZDtcbiAgICAgICAgdGhpcy5yZWNlaXZlZCA9IHJlY2VpdmVkO1xuICAgIH1cbn1cbmV4cG9ydHMuU2l3ZUVycm9yID0gU2l3ZUVycm9yO1xuLyoqXG4gKiBQb3NzaWJsZSBtZXNzYWdlIGVycm9yIHR5cGVzLlxuICovXG52YXIgU2l3ZUVycm9yVHlwZTtcbihmdW5jdGlvbiAoU2l3ZUVycm9yVHlwZSkge1xuICAgIC8qKiBgZXhwaXJhdGlvblRpbWVgIGlzIHByZXNlbnQgYW5kIGluIHRoZSBwYXN0LiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJFWFBJUkVEX01FU1NBR0VcIl0gPSBcIkV4cGlyZWQgbWVzc2FnZS5cIjtcbiAgICAvKiogYGRvbWFpbmAgaXMgbm90IGEgdmFsaWQgYXV0aG9yaXR5IG9yIGlzIGVtcHR5LiAqL1xuICAgIFNpd2VFcnJvclR5cGVbXCJJTlZBTElEX0RPTUFJTlwiXSA9IFwiSW52YWxpZCBkb21haW4uXCI7XG4gICAgLyoqIGBzY2hlbWVgIGRvbid0IG1hdGNoIHRoZSBzY2hlbWUgcHJvdmlkZWQgZm9yIHZlcmlmaWNhdGlvbi4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiU0NIRU1FX01JU01BVENIXCJdID0gXCJTY2hlbWUgZG9lcyBub3QgbWF0Y2ggcHJvdmlkZWQgc2NoZW1lIGZvciB2ZXJpZmljYXRpb24uXCI7XG4gICAgLyoqIGBkb21haW5gIGRvbid0IG1hdGNoIHRoZSBkb21haW4gcHJvdmlkZWQgZm9yIHZlcmlmaWNhdGlvbi4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiRE9NQUlOX01JU01BVENIXCJdID0gXCJEb21haW4gZG9lcyBub3QgbWF0Y2ggcHJvdmlkZWQgZG9tYWluIGZvciB2ZXJpZmljYXRpb24uXCI7XG4gICAgLyoqIGBub25jZWAgZG9uJ3QgbWF0Y2ggdGhlIG5vbmNlIHByb3ZpZGVkIGZvciB2ZXJpZmljYXRpb24uICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIk5PTkNFX01JU01BVENIXCJdID0gXCJOb25jZSBkb2VzIG5vdCBtYXRjaCBwcm92aWRlZCBub25jZSBmb3IgdmVyaWZpY2F0aW9uLlwiO1xuICAgIC8qKiBgYWRkcmVzc2AgZG9lcyBub3QgY29uZm9ybSB0byBFSVAtNTUgb3IgaXMgbm90IGEgdmFsaWQgYWRkcmVzcy4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9BRERSRVNTXCJdID0gXCJJbnZhbGlkIGFkZHJlc3MuXCI7XG4gICAgLyoqIGB1cmlgIGRvZXMgbm90IGNvbmZvcm0gdG8gUkZDIDM5ODYuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfVVJJXCJdID0gXCJVUkkgZG9lcyBub3QgY29uZm9ybSB0byBSRkMgMzk4Ni5cIjtcbiAgICAvKiogYG5vbmNlYCBpcyBzbWFsbGVyIHRoZW4gOCBjaGFyYWN0ZXJzIG9yIGlzIG5vdCBhbHBoYW51bWVyaWMgKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9OT05DRVwiXSA9IFwiTm9uY2Ugc2l6ZSBzbWFsbGVyIHRoZW4gOCBjaGFyYWN0ZXJzIG9yIGlzIG5vdCBhbHBoYW51bWVyaWMuXCI7XG4gICAgLyoqIGBub3RCZWZvcmVgIGlzIHByZXNlbnQgYW5kIGluIHRoZSBmdXR1cmUuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIk5PVF9ZRVRfVkFMSURfTUVTU0FHRVwiXSA9IFwiTWVzc2FnZSBpcyBub3QgdmFsaWQgeWV0LlwiO1xuICAgIC8qKiBTaWduYXR1cmUgZG9lc24ndCBtYXRjaCB0aGUgYWRkcmVzcyBvZiB0aGUgbWVzc2FnZS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9TSUdOQVRVUkVcIl0gPSBcIlNpZ25hdHVyZSBkb2VzIG5vdCBtYXRjaCBhZGRyZXNzIG9mIHRoZSBtZXNzYWdlLlwiO1xuICAgIC8qKiBgZXhwaXJhdGlvblRpbWVgLCBgbm90QmVmb3JlYCBvciBgaXNzdWVkQXRgIG5vdCBjb21wbGllbnQgdG8gSVNPLTg2MDEuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIklOVkFMSURfVElNRV9GT1JNQVRcIl0gPSBcIkludmFsaWQgdGltZSBmb3JtYXQuXCI7XG4gICAgLyoqIGB2ZXJzaW9uYCBpcyBub3QgMS4gKi9cbiAgICBTaXdlRXJyb3JUeXBlW1wiSU5WQUxJRF9NRVNTQUdFX1ZFUlNJT05cIl0gPSBcIkludmFsaWQgbWVzc2FnZSB2ZXJzaW9uLlwiO1xuICAgIC8qKiBUaHJvd24gd2hlbiBzb21lIHJlcXVpcmVkIGZpZWxkIGlzIG1pc3NpbmcuICovXG4gICAgU2l3ZUVycm9yVHlwZVtcIlVOQUJMRV9UT19QQVJTRVwiXSA9IFwiVW5hYmxlIHRvIHBhcnNlIHRoZSBtZXNzYWdlLlwiO1xufSkoU2l3ZUVycm9yVHlwZSA9IGV4cG9ydHMuU2l3ZUVycm9yVHlwZSB8fCAoZXhwb3J0cy5TaXdlRXJyb3JUeXBlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/siwe/dist/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/siwe/dist/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/siwe/dist/utils.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.checkInvalidKeys = exports.isValidISO8601Date = exports.generateNonce = exports.checkContractWalletSignature = void 0;\nconst random_1 = __webpack_require__(/*! @stablelib/random */ \"(ssr)/./node_modules/@stablelib/random/lib/random.js\");\n// @ts-expect-error -- ethers v6 compatibility hack\nconst ethers_1 = __webpack_require__(/*! ethers */ \"(ssr)/./node_modules/ethers/lib.commonjs/index.js\");\nconst ethersCompat_1 = __webpack_require__(/*! ./ethersCompat */ \"(ssr)/./node_modules/siwe/dist/ethersCompat.js\");\nconst EIP1271_ABI = [\n    'function isValidSignature(bytes32 _message, bytes _signature) public view returns (bytes4)',\n];\nconst EIP1271_MAGICVALUE = '0x1626ba7e';\nconst ISO8601 = /^(?<date>[0-9]{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01]))[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(.[0-9]+)?(([Zz])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/;\n/**\n * This method calls the EIP-1271 method for Smart Contract wallets\n * @param message The EIP-4361 parsed message\n * @param provider Web3 provider able to perform a contract check (Web3/EthersJS).\n * @returns {Promise<boolean>} Checks for the smart contract (if it exists) if\n * the signature is valid for given address.\n */\nconst checkContractWalletSignature = (message, signature, provider) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!provider) {\n        return false;\n    }\n    const walletContract = new ethers_1.Contract(message.address, EIP1271_ABI, provider);\n    const hashedMessage = (0, ethersCompat_1.hashMessage)(message.prepareMessage());\n    const res = yield walletContract.isValidSignature(hashedMessage, signature);\n    return res === EIP1271_MAGICVALUE;\n});\nexports.checkContractWalletSignature = checkContractWalletSignature;\n/**\n * This method leverages a native CSPRNG with support for both browser and Node.js\n * environments in order generate a cryptographically secure nonce for use in the\n * SiweMessage in order to prevent replay attacks.\n *\n * 96 bits has been chosen as a number to sufficiently balance size and security considerations\n * relative to the lifespan of it's usage.\n *\n * @returns cryptographically generated random nonce with 96 bits of entropy encoded with\n * an alphanumeric character set.\n */\nconst generateNonce = () => {\n    const nonce = (0, random_1.randomStringForEntropy)(96);\n    if (!nonce || nonce.length < 8) {\n        throw new Error('Error during nonce creation.');\n    }\n    return nonce;\n};\nexports.generateNonce = generateNonce;\n/**\n * This method matches the given date string against the ISO-8601 regex and also\n * performs checks if it's a valid date.\n * @param inputDate any string to be validated against ISO-8601\n * @returns boolean indicating if the providade date is valid and conformant to ISO-8601\n */\nconst isValidISO8601Date = (inputDate) => {\n    /* Split groups and make sure inputDate is in ISO8601 format */\n    const inputMatch = ISO8601.exec(inputDate);\n    /* if inputMatch is null the date is not ISO-8601 */\n    if (!inputDate) {\n        return false;\n    }\n    /* Creates a date object with input date to parse for invalid days e.g. Feb, 30 -> Mar, 01 */\n    const inputDateParsed = new Date(inputMatch.groups.date).toISOString();\n    /* Get groups from new parsed date to compare with the original input */\n    const parsedInputMatch = ISO8601.exec(inputDateParsed);\n    /* Compare remaining fields */\n    return inputMatch.groups.date === parsedInputMatch.groups.date;\n};\nexports.isValidISO8601Date = isValidISO8601Date;\nconst checkInvalidKeys = (obj, keys) => {\n    const invalidKeys = [];\n    Object.keys(obj).forEach(key => {\n        if (!keys.includes(key)) {\n            invalidKeys.push(key);\n        }\n    });\n    return invalidKeys;\n};\nexports.checkInvalidKeys = checkInvalidKeys;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvc2l3ZS9kaXN0L3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0IsR0FBRywwQkFBMEIsR0FBRyxxQkFBcUIsR0FBRyxvQ0FBb0M7QUFDcEgsaUJBQWlCLG1CQUFPLENBQUMsK0VBQW1CO0FBQzVDO0FBQ0EsaUJBQWlCLG1CQUFPLENBQUMsaUVBQVE7QUFDakMsdUJBQXVCLG1CQUFPLENBQUMsc0VBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLEVBQUU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSx3QkFBd0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zd2FwcGVyLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3Npd2UvZGlzdC91dGlscy5qcz8zNWY2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNoZWNrSW52YWxpZEtleXMgPSBleHBvcnRzLmlzVmFsaWRJU084NjAxRGF0ZSA9IGV4cG9ydHMuZ2VuZXJhdGVOb25jZSA9IGV4cG9ydHMuY2hlY2tDb250cmFjdFdhbGxldFNpZ25hdHVyZSA9IHZvaWQgMDtcbmNvbnN0IHJhbmRvbV8xID0gcmVxdWlyZShcIkBzdGFibGVsaWIvcmFuZG9tXCIpO1xuLy8gQHRzLWV4cGVjdC1lcnJvciAtLSBldGhlcnMgdjYgY29tcGF0aWJpbGl0eSBoYWNrXG5jb25zdCBldGhlcnNfMSA9IHJlcXVpcmUoXCJldGhlcnNcIik7XG5jb25zdCBldGhlcnNDb21wYXRfMSA9IHJlcXVpcmUoXCIuL2V0aGVyc0NvbXBhdFwiKTtcbmNvbnN0IEVJUDEyNzFfQUJJID0gW1xuICAgICdmdW5jdGlvbiBpc1ZhbGlkU2lnbmF0dXJlKGJ5dGVzMzIgX21lc3NhZ2UsIGJ5dGVzIF9zaWduYXR1cmUpIHB1YmxpYyB2aWV3IHJldHVybnMgKGJ5dGVzNCknLFxuXTtcbmNvbnN0IEVJUDEyNzFfTUFHSUNWQUxVRSA9ICcweDE2MjZiYTdlJztcbmNvbnN0IElTTzg2MDEgPSAvXig/PGRhdGU+WzAtOV17NH0tKDBbMS05XXwxWzAxMl0pLSgwWzEtOV18WzEyXVswLTldfDNbMDFdKSlbVHRdKFswMV1bMC05XXwyWzAtM10pOihbMC01XVswLTldKTooWzAtNV1bMC05XXw2MCkoLlswLTldKyk/KChbWnpdKXwoWyt8LV0oWzAxXVswLTldfDJbMC0zXSk6WzAtNV1bMC05XSkpJC87XG4vKipcbiAqIFRoaXMgbWV0aG9kIGNhbGxzIHRoZSBFSVAtMTI3MSBtZXRob2QgZm9yIFNtYXJ0IENvbnRyYWN0IHdhbGxldHNcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBFSVAtNDM2MSBwYXJzZWQgbWVzc2FnZVxuICogQHBhcmFtIHByb3ZpZGVyIFdlYjMgcHJvdmlkZXIgYWJsZSB0byBwZXJmb3JtIGEgY29udHJhY3QgY2hlY2sgKFdlYjMvRXRoZXJzSlMpLlxuICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IENoZWNrcyBmb3IgdGhlIHNtYXJ0IGNvbnRyYWN0IChpZiBpdCBleGlzdHMpIGlmXG4gKiB0aGUgc2lnbmF0dXJlIGlzIHZhbGlkIGZvciBnaXZlbiBhZGRyZXNzLlxuICovXG5jb25zdCBjaGVja0NvbnRyYWN0V2FsbGV0U2lnbmF0dXJlID0gKG1lc3NhZ2UsIHNpZ25hdHVyZSwgcHJvdmlkZXIpID0+IF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgIGlmICghcHJvdmlkZXIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB3YWxsZXRDb250cmFjdCA9IG5ldyBldGhlcnNfMS5Db250cmFjdChtZXNzYWdlLmFkZHJlc3MsIEVJUDEyNzFfQUJJLCBwcm92aWRlcik7XG4gICAgY29uc3QgaGFzaGVkTWVzc2FnZSA9ICgwLCBldGhlcnNDb21wYXRfMS5oYXNoTWVzc2FnZSkobWVzc2FnZS5wcmVwYXJlTWVzc2FnZSgpKTtcbiAgICBjb25zdCByZXMgPSB5aWVsZCB3YWxsZXRDb250cmFjdC5pc1ZhbGlkU2lnbmF0dXJlKGhhc2hlZE1lc3NhZ2UsIHNpZ25hdHVyZSk7XG4gICAgcmV0dXJuIHJlcyA9PT0gRUlQMTI3MV9NQUdJQ1ZBTFVFO1xufSk7XG5leHBvcnRzLmNoZWNrQ29udHJhY3RXYWxsZXRTaWduYXR1cmUgPSBjaGVja0NvbnRyYWN0V2FsbGV0U2lnbmF0dXJlO1xuLyoqXG4gKiBUaGlzIG1ldGhvZCBsZXZlcmFnZXMgYSBuYXRpdmUgQ1NQUk5HIHdpdGggc3VwcG9ydCBmb3IgYm90aCBicm93c2VyIGFuZCBOb2RlLmpzXG4gKiBlbnZpcm9ubWVudHMgaW4gb3JkZXIgZ2VuZXJhdGUgYSBjcnlwdG9ncmFwaGljYWxseSBzZWN1cmUgbm9uY2UgZm9yIHVzZSBpbiB0aGVcbiAqIFNpd2VNZXNzYWdlIGluIG9yZGVyIHRvIHByZXZlbnQgcmVwbGF5IGF0dGFja3MuXG4gKlxuICogOTYgYml0cyBoYXMgYmVlbiBjaG9zZW4gYXMgYSBudW1iZXIgdG8gc3VmZmljaWVudGx5IGJhbGFuY2Ugc2l6ZSBhbmQgc2VjdXJpdHkgY29uc2lkZXJhdGlvbnNcbiAqIHJlbGF0aXZlIHRvIHRoZSBsaWZlc3BhbiBvZiBpdCdzIHVzYWdlLlxuICpcbiAqIEByZXR1cm5zIGNyeXB0b2dyYXBoaWNhbGx5IGdlbmVyYXRlZCByYW5kb20gbm9uY2Ugd2l0aCA5NiBiaXRzIG9mIGVudHJvcHkgZW5jb2RlZCB3aXRoXG4gKiBhbiBhbHBoYW51bWVyaWMgY2hhcmFjdGVyIHNldC5cbiAqL1xuY29uc3QgZ2VuZXJhdGVOb25jZSA9ICgpID0+IHtcbiAgICBjb25zdCBub25jZSA9ICgwLCByYW5kb21fMS5yYW5kb21TdHJpbmdGb3JFbnRyb3B5KSg5Nik7XG4gICAgaWYgKCFub25jZSB8fCBub25jZS5sZW5ndGggPCA4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXJyb3IgZHVyaW5nIG5vbmNlIGNyZWF0aW9uLicpO1xuICAgIH1cbiAgICByZXR1cm4gbm9uY2U7XG59O1xuZXhwb3J0cy5nZW5lcmF0ZU5vbmNlID0gZ2VuZXJhdGVOb25jZTtcbi8qKlxuICogVGhpcyBtZXRob2QgbWF0Y2hlcyB0aGUgZ2l2ZW4gZGF0ZSBzdHJpbmcgYWdhaW5zdCB0aGUgSVNPLTg2MDEgcmVnZXggYW5kIGFsc29cbiAqIHBlcmZvcm1zIGNoZWNrcyBpZiBpdCdzIGEgdmFsaWQgZGF0ZS5cbiAqIEBwYXJhbSBpbnB1dERhdGUgYW55IHN0cmluZyB0byBiZSB2YWxpZGF0ZWQgYWdhaW5zdCBJU08tODYwMVxuICogQHJldHVybnMgYm9vbGVhbiBpbmRpY2F0aW5nIGlmIHRoZSBwcm92aWRhZGUgZGF0ZSBpcyB2YWxpZCBhbmQgY29uZm9ybWFudCB0byBJU08tODYwMVxuICovXG5jb25zdCBpc1ZhbGlkSVNPODYwMURhdGUgPSAoaW5wdXREYXRlKSA9PiB7XG4gICAgLyogU3BsaXQgZ3JvdXBzIGFuZCBtYWtlIHN1cmUgaW5wdXREYXRlIGlzIGluIElTTzg2MDEgZm9ybWF0ICovXG4gICAgY29uc3QgaW5wdXRNYXRjaCA9IElTTzg2MDEuZXhlYyhpbnB1dERhdGUpO1xuICAgIC8qIGlmIGlucHV0TWF0Y2ggaXMgbnVsbCB0aGUgZGF0ZSBpcyBub3QgSVNPLTg2MDEgKi9cbiAgICBpZiAoIWlucHV0RGF0ZSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8qIENyZWF0ZXMgYSBkYXRlIG9iamVjdCB3aXRoIGlucHV0IGRhdGUgdG8gcGFyc2UgZm9yIGludmFsaWQgZGF5cyBlLmcuIEZlYiwgMzAgLT4gTWFyLCAwMSAqL1xuICAgIGNvbnN0IGlucHV0RGF0ZVBhcnNlZCA9IG5ldyBEYXRlKGlucHV0TWF0Y2guZ3JvdXBzLmRhdGUpLnRvSVNPU3RyaW5nKCk7XG4gICAgLyogR2V0IGdyb3VwcyBmcm9tIG5ldyBwYXJzZWQgZGF0ZSB0byBjb21wYXJlIHdpdGggdGhlIG9yaWdpbmFsIGlucHV0ICovXG4gICAgY29uc3QgcGFyc2VkSW5wdXRNYXRjaCA9IElTTzg2MDEuZXhlYyhpbnB1dERhdGVQYXJzZWQpO1xuICAgIC8qIENvbXBhcmUgcmVtYWluaW5nIGZpZWxkcyAqL1xuICAgIHJldHVybiBpbnB1dE1hdGNoLmdyb3Vwcy5kYXRlID09PSBwYXJzZWRJbnB1dE1hdGNoLmdyb3Vwcy5kYXRlO1xufTtcbmV4cG9ydHMuaXNWYWxpZElTTzg2MDFEYXRlID0gaXNWYWxpZElTTzg2MDFEYXRlO1xuY29uc3QgY2hlY2tJbnZhbGlkS2V5cyA9IChvYmosIGtleXMpID0+IHtcbiAgICBjb25zdCBpbnZhbGlkS2V5cyA9IFtdO1xuICAgIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBpZiAoIWtleXMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgaW52YWxpZEtleXMucHVzaChrZXkpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGludmFsaWRLZXlzO1xufTtcbmV4cG9ydHMuY2hlY2tJbnZhbGlkS2V5cyA9IGNoZWNrSW52YWxpZEtleXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/siwe/dist/utils.js\n");

/***/ })

};
;